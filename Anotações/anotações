server.port=${port:8081} inserindo esta chave no arquivo application.properties 
muda a porta onde o  spring é inicializado.

	
@RequestMapping(method= RequestMethod.GET) essa anotação pode ser substituida pelo método getMapping()

A anotação @Document(collection = "nomeCustomizado")(-->  da tabela), define que a classe será 
uma coleção no banco de dados mongo. Já a anotação  @Id indica o identificador único da 
tabela/classes.

Força a criação do banco no mongoDB

@RequestMapping(method=RequestMethod.GET)
public ResponseEntity<List<UsuarioDTO>> encontrarTodosUsuarios(){
	
	Usuario maria = new Usuario("1", "Maria Silva", "maria@gmail.com");
	servico.salvarDados(maria);
	...
}


Inserção no mongoDB complass:

{
  "nome": "Mari",
  "email": "Mari@gmail.com"
 }


DTO(Data Transfer Object): é um objeto que tem o papel de carregar dados das entidades de forma simples 
podendo inclusive "projetar" apenas alguns dados da entidade original.

Vantagens:

-Otimiza o trafégo (trafegando menos dados)

-Evita que dados de interesse exclusivo do sistema fiquem sendo expostos (por exemplo: senhas,dados de 
auditoria como data de criação e data de atualização do objeto, etc.)

-Customiza os objetos trafegados conforme a necessidade de cada requisição (por exemplo: para alterar 
um produto, você precisa dos dados A, B e C; já para listar os produtos, eu preciso dos dados A, B e a 
categoria de cada produto, etc).


@ControllerAdvice :: Anotação que indica que a classe será responsável por tratar possíveis erros nas 
requisições.

@ExceptionHandler(ObjetoNaoEncontradoExcecao.class) essa anotação é padrão do framework. Ela indica que 
quando ocorrer o erro, passado entre parênteses, ele deverá ser tratado por essa classe/método.

@RequestBody: Anotação para que o endpoint aceite o objeto passado.


@DBRef: anotação que referência outra coleção (apenas apresenta a referência de cada objeto)

private AutorDTO autorDTO; --> Garante a cópia do objeto autorDTO/usuario para o documento Post 
aninhando as os objetos.

@DBRef(lazy =true): isso garante que a lista de posts só será carregada se solicitada e não 
simutaneamente ao buscar os usuário, eliminando tráfego desnecessário na rede, vindo só os dados 
básicos do usuário.

public class Instanciacao implements CommandLineRunner // Classe que representa a carga inicial do banco




